name: Build, Tests Java, Docker build, push docker image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: '*'
    
env:
  MAVEN_CLI_OPTS: "-P ci-github --batch-mode --update-snapshots --show-version -Duser.timezone=UTC"
  NPM_OPTS: "--prefix ./frontend"

jobs:
  build_jar:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn $MAVEN_CLI_OPTS clean package -DskipTests

  build_front:
    name: front
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 14 ]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Run install
        run: npm $NPM_OPTS install
      - name: Run build
        run: npm $NPM_OPTS run build
        env:
          CI: ""

  
  tests:
    name: Unit tests
    needs: build_jar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Run tests
        run: mvn $MAVEN_CLI_OPTS test
    
  docker:
    name: Docker build and push
    needs: [tests, build_front]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 14 ]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Run install
        run: npm $NPM_OPTS install
      - name: Run build
        run: npm $NPM_OPTS run build
        env:
          CI: ""

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn $MAVEN_CLI_OPTS clean package -DskipTests

      - name: PrepareReg Names
        run: echo IMAGE_REPOSITORY=$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_REPOSITORY }}:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
